// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proj4Me.Infra.Data.Context;

namespace Proj4Me.Infra.Data.Migrations
{
    [DbContext(typeof(ProjetoAreaServicoContext))]
    [Migration("20221023160919_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proj4Me.Domain.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IndexClienteProj4Me")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Proj4Me.Domain.Colaboradores.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IndexColaboradorProj4Me")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Colaborador");
                });

            modelBuilder.Entity("Proj4Me.Domain.Perfis.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Perfil");
                });

            modelBuilder.Entity("Proj4Me.Domain.ProjetosAreaServicos.ProjetoAreaServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<long>("Index")
                        .HasColumnType("bigint");

                    b.Property<int>("IndexProjetoProj4Me")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid?>("PerfilId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("PerfilId");

                    b.ToTable("ProjetoAreaServico");
                });

            modelBuilder.Entity("Proj4Me.Domain.ProjetosAreaServicos.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CascadeMode")
                        .HasColumnType("int");

                    b.Property<int>("ClassLevelCascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataEsforco")
                        .HasColumnType("datetime2");

                    b.Property<long>("Index")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeColaborador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeTarefa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjetoAreaServicoId")
                        .HasColumnType("uniqueidentifier");                    

                    b.Property<int>("RuleLevelCascadeMode")
                        .HasColumnType("int");

                    b.Property<string>("TempoGastoDetalhado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTempoGasto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoAreaServicoId");                

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("Proj4Me.Domain.ProjetosAreaServicos.ProjetoAreaServico", b =>
                {
                    b.HasOne("Proj4Me.Domain.Clientes.Cliente", "Cliente")
                        .WithMany("ProjetoAreaServico")
                        .HasForeignKey("ClienteId");

                    b.HasOne("Proj4Me.Domain.Colaboradores.Colaborador", "Colaborador")
                        .WithMany("ProjetoAreaServico")
                        .HasForeignKey("ColaboradorId");

                    b.HasOne("Proj4Me.Domain.Perfis.Perfil", "Perfil")
                        .WithMany("ProjetoAreaServico")
                        .HasForeignKey("PerfilId");

                    b.Navigation("Cliente");

                    b.Navigation("Colaborador");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Proj4Me.Domain.ProjetosAreaServicos.Tarefa", b =>
                {
                    b.HasOne("Proj4Me.Domain.ProjetosAreaServicos.ProjetoAreaServico", null)
                        .WithMany("ListaTarefas")
                        .HasForeignKey("ProjetoAreaServicoId");

                    b.Navigation("ProjetoAreaServico");
                });

            modelBuilder.Entity("Proj4Me.Domain.Clientes.Cliente", b =>
                {
                    b.Navigation("ProjetoAreaServico");
                });

            modelBuilder.Entity("Proj4Me.Domain.Colaboradores.Colaborador", b =>
                {
                    b.Navigation("ProjetoAreaServico");
                });

            modelBuilder.Entity("Proj4Me.Domain.Perfis.Perfil", b =>
                {
                    b.Navigation("ProjetoAreaServico");
                });

            modelBuilder.Entity("Proj4Me.Domain.ProjetosAreaServicos.ProjetoAreaServico", b =>
                {
                    b.Navigation("ListaTarefas");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
